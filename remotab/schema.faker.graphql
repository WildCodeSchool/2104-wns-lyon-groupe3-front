type Address {
	street: String @fake(type: streetName)
  postalCode: String @fake(type: zipCode)
  city: String @fake(type: city)
}
type User {
  id: ID
  firstname: String @fake(type: firstName)
  lastname: String @fake(type: lastName)
  role: Role
  email: String @fake(type: email)
  picture: String @fake(type: avatarUrl)
  address:  Address  
  # phoneNumberProf: String @fake(type: phoneNumber, locale: fr)
}
type Mutation {
  createUser(inputUser: InputUser): User
  removeUser(id: String): User
  updateUserInfo(id: String): User
}
type Query {
  allUsers: [User] @listLength(min:2, max:10)
}
input InputaddressInput  {
  street: String!
  postalCode: String!
  city: String!
}
input InputUser {
  firstname: String!
  lastname: String!
  role: String!
  email: String!
  picture: String!
  addressInput: InputaddressInput!
  # phoneNumberProf: String! 
}
enum Role {
  student
  teacher
  admin
}


